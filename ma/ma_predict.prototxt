name: "MA"
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 64
      dim: 1
      dim: 1
      dim: 1000
    }
  }
}
layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer {
    bottom: "conv1"
    top: "conv1"
    name: "bn_conv1"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}
layer {
    bottom: "conv1"
    top: "conv1"
    name: "scale_conv1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "relu1"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size:3 
    stride:1
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
        type: "constant"
        value: 0
      }
  }
}
layer {
    bottom: "conv2"
    top: "conv2"
    name: "bn_conv2"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}
layer {
    bottom: "conv2"
    top: "conv2"
    name: "scale_conv2"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "relu2"
  type: "ReLU"
}
layer {
  bottom: "conv2"
  top: "fc5"
  name: "fc5"
  type: "InnerProduct"
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
        type: "constant"
        value: 0
      }
  }
}
layer {
    bottom: "fc5"
    top: "fc5"
    name: "bn_fc5"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}
layer {
    bottom: "fc5"
    top: "fc5"
    name: "scale_fc5"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}
layer {
  bottom: "fc5"
  top: "fc5"
  name: "relu5"
  type: "ReLU"
}
layer {
  bottom: "fc5"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
        type: "constant"
        value: 0
      }
  }
}
